1) 1.Given an array of integers, rearrange the array such that every second element of the array 
is greater than its left and right elements. 
Assume no duplicate elements are present in the array.
Sample input: {1,2,3,4,5,6,7} Sample output:
{1,3,2,5,4,7,6}

--------------------------------------------------------------------------------

2) Find the Nth term in the series that contains only 3&7
eg 3,7,33,73,77,333,337......
Input format enter a single number N....where 0<N<100
Output 
The number in Nth series is ____
if 3 is input output is 33
if input is 6 output is 333 

--------------------------------------------------------------------------------

3) Given an unsorted array. Give  sum as the largest sum of  continuous pair.
A[]={0,5,6,0,9,0,1,4}

--------------------------------------------------------------------------------

4) Given an unsorted array.
A[]=4,3,7,11,50
get the value of X and Y in which ( X<Y).
Print only  the numbers of the array between the intervals of X&Y

--------------------------------------------------------------------------------

5) Let n can be any positive integer for gap array elements can be integers
Sample Input:
Enter array size: 13
Enter array: {1,2,3,4,5,6,7,8,9,10,11,12,13}
Enter Gap: 3
Sample Output:
35	26	30

--------------------------------------------------------------------------------

6) Given an array arr of integers, find all the elements that occur more than once 
in the array. If no element repeats, return an empty array.

Examples:

Input: arr[] = [2, 3, 1, 2, 3]
Output: [2, 3] 
Explanation: 2 and 3 occur more than once in the given array.
Input: arr[] = [0, 3, 1, 2] 
Output: [] 
Explanation: There is no repeating element in the array, so the output is empty.
Input: arr[] = [2]
Output: [] 
Explanation: There is single element in the array. Therefore output is empty.

--------------------------------------------------------------------------------

7) Given an array arr[] of positive integers. Your task is to sort them so that the first part 
of the array contains odd numbers sorted in descending order, 
and the rest of the portion contains even numbers sorted in ascending order.

Examples:

Input: arr[] = [1, 2, 3, 5, 4, 7, 10]
Output: [7, 5, 3, 1, 2, 4, 10]
Explanation: 7 5 3 1 are odds in descending order and 2 4 10 are evens in ascending order.
Input: arr[] = [0, 4, 5, 3, 7, 2, 1]
Output: [7, 5, 3, 1, 0, 2, 4]
Explanation: 7 5 3 1 are odds in descending order and 0 2 4 are evens in ascending order.

--------------------------------------------------------------------------------

8) Write a function to convert a given number n into words.

The idea is to break down the number into International Number System, i.e., 
smaller groups of three digits (hundreds, tens, and ones), and convert each group into words.

--------------------------------------------------------------------------------
9) Given an array nums of positive integers of size N. Find all distinct digits present in nums.

Example:

Input: nums = [131, 11, 48]
Output: 1 3 4 8
Explanation: 1, 3, 4, and 8 are only distinct
digits that can be extracted from the numbers
of the array.
---------------------------------
Example:

Input: nums = [111, 222, 333, 4444, 666]
Output: 1 2 3 4 6
Explanation: 1, 2, 3, 4, and 6 are only distinct
digits that can be extracted from the numbers
of the array.

--------------------------------------------------------------------------------
10) You are given an array arr of size n - 1 that contains distinct integers in the range from 1 to n 
(inclusive). This array represents a permutation of the integers from 1 to n with one element missing. 
Your task is to identify and return the missing element.

Examples:

Input: arr[] = [1, 2, 3, 5]
Output: 4
Explanation: All the numbers from 1 to 5 are present except 4.
Input: arr[] = [8, 2, 4, 5, 3, 7, 1]
Output: 6
Explanation: All the numbers from 1 to 8 are present except 6.
Input: arr[] = [1]
Output: 2
Explanation: Only 1 is present so the missing element is 2.

--------------------------------------------------------------------------------

11) Problem statement
Given an array 'arr' with 'n' elements, the task is to rotate the array to the left by 'k' steps, 
where 'k' is non-negative.

Example:
'arr '= [1,2,3,4,5]
'k' = 1  rotated array = [2,3,4,5,1]
'k' = 2  rotated array = [3,4,5,1,2]
'k' = 3  rotated array = [4,5,1,2,3] and so on.

--------------------------------------------------------------------------------

12) You are given an array arr[] containing positive integers. The elements in the array arr[] range 
from 1 to n (where n is the size of the array), and some numbers may be repeated or absent. 
Your task is to count the frequency of all numbers in the range 1 to n and return an 
array of size n such that result[i] represents the frequency of the number i (1-based indexing).

Examples

Input: arr[] = [2, 3, 2, 3, 5]
Output: [0, 2, 2, 0, 1]
Explanation: We have: 1 occurring 0 times, 2 occurring 2 times, 3 occurring 2 times, 
4 occurring 0 times, and 5 occurring 1 time.
Input: arr[] = [3, 3, 3, 3]
Output: [0, 0, 4, 0]
Explanation: We have: 1 occurring 0 times, 2 occurring 0 times, 3 occurring 4 times, 
and 4 occurring 0 times.

--------------------------------------------------------------------------------

13) Given an array arr[] of positive integers and another integer target. 
Determine if there exists two distinct indices such that the sum of there elements is equals to target.

Examples:

Input: arr[] = [1, 4, 45, 6, 10, 8], target = 16
Output: true
Explanation: arr[3] + arr[4] = 6 + 10 = 16.
Input: arr[] = [1, 2, 4, 3, 6], target = 11
Output: false
Explanation: None of the pair makes a sum of 11.
Find the square root of a number without using math inbuilt functions 

--------------------------------------------------------------------------------

14) Given a Hexadecimal number as an input, the task is to convert that number to a Binary number.

--------------------------------------------------------------------------------

15) Given an array arr[] and an integer target, determine if there exists a triplet in 
the array whose sum equals the given target.
Return true if such a triplet exists, otherwise, return false.

Examples

Input: arr[] = [1, 4, 45, 6, 10, 8], target = 13 
Output: true 
Explanation: The triplet {1, 4, 8} sums up to 13
Input: arr[] = [1, 2, 4, 3, 6, 7], target = 10 
Output: true 
Explanation: The triplets {1, 3, 6} and {1, 2, 7} both sum to 10. 

--------------------------------------------------------------------------------

16)  Given a number n, find the value of n raised to the power of its own reverse.
Note: The result will always fit into a 32-bit signed integer.
Examples:

Input: n = 2
Output: 4
Explanation: The reverse of 2 is 2, and 22 = 4.
Input: n = 10
Output: 10
Explanation: The reverse of 10 is 1 (leading zero is discarded), and 101 = 10.
Input: n = 3

--------------------------------------------------------------------------------

17) You are given a sorted array consisting of only integers where every element appears exactly twice,
except for one element which appears exactly once.
Return the single element that appears only once.
Your solution must run in O(log n) time and O(1) space.

Example 1:
Input: nums = [1,1,2,3,3,4,4,8,8]
Output: 2

Example 2:
Input: nums = [3,3,7,7,10,11,11]
Output: 10

--------------------------------------------------------------------------------

18) Given an array A[] of integers, sort the array according to frequency of elements. 
That is elements that have higher frequency come first. 
If frequencies of two elements are same, then smaller number comes first.

Input:
5 5 4 6 4

Output:
4 4 5 5 6

Input:
5 9 2 9 2 9

Output:
9 9 9 2 5

--------------------------------------------------------------------------------

19) Given an integer array arr[]. Find the number of triangles that can be formed with 
three different array elements as lengths of three sides of the triangle. 

A triangle with three given sides is only possible if sum of any two sides is always greater 
than the third side.

Examples:

Input: arr[] = [4, 6, 3, 7]
Output: 3
Explanation: There are three triangles possible [3, 4, 6], [4, 6, 7] and [3, 6, 7]. 
Note that [3, 4, 7] is not a possible triangle.  
Input: arr[] = [10, 21, 22, 100, 101, 200, 300]
Output: 6
Explanation: There can be 6 possible triangles: [10, 21, 22], [21, 100, 101], [22, 100, 101], 
[10, 100, 101], [100, 101, 200] and [101, 200, 300]
Input: arr[] = [1, 2, 3]
Output: 0
Explanation: No triangles are possible.

--------------------------------------------------------------------------------

20) The count-and-say sequence is a sequence of digit strings defined by the recursive formula:

countAndSay(1) = "1"
countAndSay(n) is the run-length encoding of countAndSay(n - 1).
Run-length encoding (RLE) is a string compression method that works by 
replacing consecutive identical characters (repeated 2 or more times) with the concatenation 
of the character and the number marking the count of the characters (length of the run). 
For example, to compress the string "3322251" we replace "33" with "23", replace "222" with "32", 
replace "5" with "15" and replace "1" with "11". Thus the compressed string becomes "23321511".

Given a positive integer n, return the nth element of the count-and-say sequence.

--------------------------------------------------------------------------------

21) Microsoft Excel columns are labeled in a manner similar to the English alphabet:

The first 26 columns are labeled A through Z.
The 27th column is labeled AA, the 28th column AB, and so on.
Given an integer 
𝑁
N, write a program to convert it into its corresponding column title as it would appear in Excel.

Input Format:
A single integer 1≤N≤10^7 representing the column number.

--------------------------------------------------------------------------------